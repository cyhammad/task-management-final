import { collectionGroup, onSnapshot, query, where } from "firebase/firestore";
import Head from "next/head";
import React, { useEffect, useState } from "react";
import Column from "../components/Column";
import Header from "../components/Header";
import Project from "../components/Project";
import SubNavBar from "../components/SubNavBar";
import Task from "../components/Task";
import { db } from "../firebase";

function Archive() {
  const [projects, setProjects] = useState([]);
  const [tasks, setTasks] = useState([]);

  const [projectCount, setProjectCount] = useState(3);
  const [taskCount, setTaskCount] = useState(3);

  useEffect(
    () =>
      onSnapshot(query(collectionGroup(db, "projects"), where('archiveDate', '>', new Date())), (snapshot) => {
        setProjects(snapshot.docs);
      }),
    [db]
  );
  useEffect(
    () =>
      onSnapshot(query(collectionGroup(db, "tasks"), where('archiveDate', '>', new Date())), (snapshot) => {
        setTasks(snapshot.docs);
      }),
    [db]
  );

  const viewMore = (task) => {
    if (task == "project") {
      setProjectCount(projects.length);
    }
    if (task == "task") {
      setTaskCount(todoTasks.length);
    }
  };
  const viewLess = (task) => {
    if (task == "project") {
        setProjectCount(3);
      }
      if (task == "task") {
        setTaskCount(3);
      }
  };
  return (
    <div className="bg-default">
      <Head>
        <title>Task Management | Admin</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* Header */}
      <Header selectedTab="work" />

      {/* Tasks */}
      <div className="px-4 sm:px-6 md:px-8 lg:px-10 lg:min-h-screen lg:pb-10">
        <h1 className="text-3xl font-semibold mt-11">Quick Tasks</h1>
        <SubNavBar selectedTab="archive" />
        <div className="flex space-x-5 w-full overflow-x-auto scroll-smooth scrollbar pb-60">
          <Column
            name="Archived Projects"
            taskCount={projects.length}
            // viewMore={() => viewMore("new")}
            // viewLess={() => viewLess("new")}
          >
            {projects.slice(0, projectCount).map((task) => (
                <Project
                    name={task.data().title}
                    priority={task.data().priorityValue}
                    userId={task.data().userId}
                    desc={task.data().description}
                    projectId={task.data().projectId}
                    key={task.data().id}
                    comments={task.data().comments}
                    status={task.data().status}
                    files={task.data().files}
                />
            ))}
          </Column>
          <Column
            name="Archived Tasks"
            taskCount={tasks.length}
            // viewMore={() => viewMore("todo")}
            // viewLess={() => viewLess("todo")}
          >
            {tasks.slice(0, taskCount).map((task) => (
              <>
                <Task task={task} />
              </>
            ))}
          </Column>
        </div>
      </div>
      {/* Modal */}
    </div>
  );
}

export default Archive;
