import { EnvelopeIcon, EyeIcon, EyeSlashIcon, LockClosedIcon, PlusIcon, UserIcon } from '@heroicons/react/24/outline';
import { updateProfile } from 'firebase/auth';
import { addDoc, collection, doc, setDoc, updateDoc } from 'firebase/firestore';
import { getDownloadURL, ref, uploadString } from 'firebase/storage';
import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';
import { Router, useRouter } from 'next/router';
import React, { useRef, useState } from 'react'
import { useAuth } from '../../context/AuthContext'
import { auth, db, storage } from '../../firebase';

const SignUp = () => {
    const {user, signup} = useAuth();
    const router = useRouter()
    const filePickerRef = useRef(null);

    const [showPass, setShowPass] = useState(false);    
    const [selectedFile, setSelectedFile] = useState(null);
    const [loading, setLoading] = useState(false);
    
    const [data, setData] = useState(
        {
            displayName: '',
            email: '',
            password: '',
        }
    );
    const handleSignup = async (e) => {
        e.preventDefault();
        if (loading) return;
        setLoading(true);
        try {
            await signup(data.email, data.password)
            const docRef = await addDoc(collection(db, "users"),{
                name: data.displayName,
                email: data.email,
                uid: auth.currentUser.uid,
            }, {merge: true});
            console.log("doc: ", docRef.id);
            const imageRef = ref(storage, `profilePics/${auth.currentUser.uid}`);
            await uploadString(imageRef, selectedFile, "data_url").then(
                async (snapshot) => {
                  const downloadURL = await getDownloadURL(imageRef);
                  await updateDoc(doc(db, "users", docRef.id), {
                    image: downloadURL,
                  });
                  updateProfile(auth.currentUser, {
                    displayName: data.displayName,
                    photoURL: downloadURL,
                  })
                }
              );
            
            router.push('/');
        } catch (error) {
            console.log(error);
        }
        setLoading(false);
    }
    const addImageToProfile = (e) => {
        const reader = new FileReader();
        if (e.target.files[0]) {
          reader.readAsDataURL(e.target.files[0]);
        }
        reader.onload = (readerEvent) => {
          setSelectedFile(readerEvent.target.result);
        };
      };
    return ( 
        <>
            <div className="bg-default h-screen">
            <Head>
                <title>Sign Up</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className="grid grid-cols-12 h-screen">
                <div className="col-span-1 lg:col-span-3">
    
                </div>
                <div className="col-span-10 lg:col-span-5 flex flex-col items-center lg:px-10">
                <div className="relative w-36 h-24 cursor-pointer mt-5">
                    <Image src="/LOGO.png" layout="fill" alt="Profile" objectFit="contain" />
                </div>
                <p className="text-3xl font-bold pb-3 w-full text-center">Create your account here.</p>
                <p className="text-gray-500">Sign Up to continue using</p>
                <div className="pt-5 sm:px-10 w-full max-w-lg">
                    <form onSubmit={handleSignup}>
                        <input
                        ref={filePickerRef}
                        onChange={addImageToProfile}
                        type="file"
                        hidden
                        />
                        <div className="flex justify-center items-center py-2">
                            {selectedFile ? (
                                <Image
                                className="cursor-pointer rounded-lg"
                                src={selectedFile}
                                height={100}
                                width={100}
                                alt="selected image"
                                />
                            ) : (
                                <div className="bg-blue-50 p-8 flex justify-center items-center rounded-xl">
                                <div
                                    onClick={() => filePickerRef.current.click()}
                                    className="bg-[#004064] flex justify-center items-center text-white px-2 py-2 rounded-lg cursor-pointer"
                                >
                                    <PlusIcon className="h-6 w-6" />
                                </div>
                                </div>
                            )}
                        </div>
                        <div className="flex flex-col items-center  justify-center pb-3">
                            <p className="font-medium">Upload Profile Picture</p>
                            <p className="text-xs text-gray-500">Select a profile picture from your device</p>
                        </div>
                        <div className="shadow-md flex justify-center items-center p-5 bg-white rounded mb-4">
                        <UserIcon className="w-6 h-6 text-gray-500" />
                        <input value={data.displayName} className="focus:outline-none pl-4 w-full" type="text" name="displayName" id="displayName" placeholder="Name    " onChange={(e)=>setData({...data, displayName: e.target.value})} />
                        </div>
                        <div className="shadow-md flex justify-center items-center p-5 bg-white rounded mb-4">
                        <EnvelopeIcon className="w-6 h-6 text-gray-500" />
                        <input value={data.email} className="focus:outline-none pl-4 w-full" type="email" name="email" id="email" placeholder="Email" onChange={(e)=>setData({...data, email: e.target.value})} />
                        </div>
                        <div className="shadow-md flex justify-center items-center p-5 bg-white rounded">
                            <LockClosedIcon className="w-6 h-6 text-gray-500" />
                            <input value={data.password} className="focus:outline-none pl-4 w-full" type={showPass ? "text" : "password"} name="password" id="password" placeholder="Password" onChange={(e)=>setData({...data, password: e.target.value})} />
                            {
                            showPass ?
                            <EyeIcon className='w-6 h-6 text-gray-500 hover:text-black cursor-pointer' onClick={()=>setShowPass(false)} />
                            :
                            <EyeSlashIcon className='w-6 h-6 text-gray-500 hover:text-black cursor-pointer' onClick={()=>setShowPass(true)} />
                            }
                        </div>
                        <input className="shadow-md flex justify-center items-center p-5 bg-[#004064] rounded mt-7 cursor-pointer text-white w-full" type="submit" value={loading? "Creating Account...": "Sign Up"} />
                    </form>
                </div>
                </div>
                <div className="col-span-4 flex-col justify-center items-end h-full w-full hidden lg:flex">
                <div className="h-[48vh] aspect-square rounded-tl-full bg-[#81B3FF] flex justify-end items-end">
                    <div className="h-[38vh] aspect-square rounded-tl-full bg-[#76ACFF] flex justify-end items-end">
                    <div className="h-[28vh] aspect-square rounded-tl-full bg-[#65A3FF] flex justify-end items-end">
                        <div className="h-[18vh] aspect-square rounded-tl-full bg-[#5A9CFF] flex justify-end items-end">
                        </div>
                    </div>
                    </div>
                </div>
                <div className="h-[48vh] aspect-square rounded-bl-full bg-[#81B3FF] flex justify-end items-start">
                    <div className="h-[38vh] aspect-square rounded-bl-full bg-[#76ACFF] flex justify-end items-start">
                    <div className="h-[28vh] aspect-square rounded-bl-full bg-[#65A3FF] flex justify-end items-start">
                        <div className="h-[18vh] aspect-square rounded-bl-full bg-[#5A9CFF] flex justify-end items-start">
                        </div>
                    </div>
                    </div>
                </div>
                </div>
            </div>
            </div>
        </>
      )
}

export default SignUp
